name: Test Kyverno Policy with Kind

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test-kyverno-policy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create Kind cluster with more resources
        run: |
          cat <<EOF | kind create cluster --name kyverno-test --config=-
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
            kubeadmConfigPatches:
            - |
              kind: InitConfiguration
              nodeRegistration:
                kubeletExtraArgs:
                  system-reserved: memory=2Gi
            extraMounts:
            - hostPath: /var/run/docker.sock
              containerPath: /var/run/docker.sock
            extraPortMappings:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
          EOF
          kubectl cluster-info --context kind-kyverno-test

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Install Kyverno with debug
        run: |
          helm repo add kyverno https://kyverno.github.io/kyverno/
          helm repo update
          helm install kyverno kyverno/kyverno -n kyverno --create-namespace \
            --set replicaCount=1 \
            --set image.tag=v1.10.0 \
            --set extraArgs="{--debug,--logLevel=4}" \
            --wait --timeout 5m

          # Debug: Show deployment status
          kubectl get deployments -n kyverno -o wide
          kubectl describe deployment -n kyverno kyverno

      - name: Verify Kyverno installation
        run: |
          # Check pod status and logs
          kubectl get pods -n kyverno -l app.kubernetes.io/name=kyverno
          kubectl logs -n kyverno -l app.kubernetes.io/name=kyverno --tail=50

      - name: Create Secret for Cosign public key
        run: |
          kubectl create secret generic cosign-public-key --from-file=cosign.pub=./cosign.pub

      # Остальные шаги остаются без изменений...
