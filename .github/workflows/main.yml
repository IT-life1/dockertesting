name: Test Kyverno Policy with Kind

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test-kyverno-policy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create Kind cluster with more resources
        run: |
          cat <<EOF | kind create cluster --name kyverno-test --config=-
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
            kubeadmConfigPatches:
            - |
              kind: InitConfiguration
              nodeRegistration:
                kubeletExtraArgs:
                  system-reserved: memory=2Gi,cpu=500m
                  eviction-hard: memory.available<500Mi
            resources:
              requests:
                memory: 4Gi
                cpu: 2
          EOF
          kubectl cluster-info --context kind-kyverno-test

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Install Kyverno with full diagnostics
        run: |
          set -x
          
          # Add repo with retry
          helm repo add kyverno https://kyverno.github.io/kyverno/ || true
          helm repo update
          
          # Debug Helm installation
          helm search repo kyverno
          
          # Install with debug and wait
          helm upgrade --install kyverno kyverno/kyverno \
            -n kyverno \
            --create-namespace \
            --set replicaCount=1 \
            --set image.tag=v3.5.3 \
            --set extraArgs="{--debug,--logLevel=4}" \
            --wait \
            --timeout 10m \
            --debug

          # Verify namespace
          kubectl get ns kyverno -o yaml
          
          # Check all resources
          kubectl get all -n kyverno
          
          # Show deployment details
          kubectl describe deployment -n kyverno kyverno
          
          # Show events
          kubectl get events -n kyverno --sort-by=.metadata.creationTimestamp

      - name: Force Kyverno pod creation
        if: failure()
        run: |
          # Emergency cleanup
          kubectl delete pods -n kyverno --all --force --grace-period=0
          kubectl rollout restart deployment/kyverno -n kyverno
          sleep 30
          kubectl get pods -n kyverno

      # Остальные шаги...
